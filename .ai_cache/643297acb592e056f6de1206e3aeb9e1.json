{
  "summary": "编辑距离算法用于计算两个字符串间的最小操作次数（插入、删除或替换字符）。核心解法采用动态规划，通过构建状态转移矩阵比较字符差异，空间复杂度可优化至O(min(m,n))。该算法在文本相似度比较、拼写检查等场景有重要应用，推荐使用空间优化版本以平衡时间效率(O(mn))和内存消耗。",
  "service": "deepseek",
  "page_title": "[72. 编辑距离](https://leetcode.cn/problems/edit-distance/)",
  "timestamp": "2025-07-13T10:32:01.755398",
  "language": "zh"
}