{
  "summary": "该文章介绍了一种解决浮点数精度问题的通用方法，通过自定义比较函数isNearlyEqual()来避免直接比较浮点数。函数采用相对误差与绝对误差相结合的方式，设置合理的容差阈值(epsilon=1e-5f)，有效处理了0.1+0.2与0.3比较等典型场景。该方法适用于需要高精度浮点运算的编程场景，能显著减少因二进制表示导致的精度误差问题。",
  "service": "deepseek",
  "page_title": "[2278. 字母在字符串中的百分比](https://leetcode.cn/problems/percentage-of-letter-in-string/)",
  "timestamp": "2025-07-20T17:36:03.278810",
  "language": "zh"
}